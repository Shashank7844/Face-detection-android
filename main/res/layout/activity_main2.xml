<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="#00030B"
    tools:context=".MainActivity2">

    <TextView
        android:id="@+id/textView4"
        android:layout_width="406dp"
        android:layout_height="53dp"
        android:background="#031B97"
        android:fontFamily="@font/baloo"
        android:text="About Face Detection"
        android:textColor="#EF0C0C"
        android:textSize="30sp"
        android:textStyle="bold"
        tools:layout_editor_absoluteX="-11dp"
        tools:layout_editor_absoluteY="16dp"
        tools:ignore="MissingConstraints" />

    <TextView
        android:id="@+id/textView5"
        android:layout_width="362dp"
        android:layout_height="623dp"
        android:background="#000410"
        android:text='Face detection is a computer technology being used in a variety of applications that identifies human faces in digital images.[1] Face detection also refers to the psychological process by which humans locate and attend to faces in a visual scene. Face detection can be regarded as a specific case of object-class detection. In object-class detection, the task is to find the locations and sizes of all objects in an image that belong to a given class. Examples include upper torsos, pedestrians, and cars.  Face-detection algorithms focus on the detection of frontal human faces. It is analogous to image detection in which the image of a person is matched bit by bit. Image matches with the image stores in database. Any facial feature changes in the database will invalidate the matching process.[3]  A reliable face-detection approach based on the genetic algorithm and the eigen-face[4] technique:  Firstly, the possible human eye regions are detected by testing all the valley regions in the gray-level image. Then the genetic algorithm is used to generate all the possible face regions which include the eyebrows, the iris, the nostril and the mouth corners"'
        android:textColor="#F2F3F4"
        android:textSize="18sp"
        tools:layout_editor_absoluteX="8dp"
        tools:layout_editor_absoluteY="109dp"
        tools:ignore="MissingConstraints" />
</androidx.constraintlayout.widget.ConstraintLayout>